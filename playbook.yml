---
- name: chaos-shift
  hosts: localhost
  tasks:
  - name: Preparation
    block:
    - name: Check bin and opt directories exist for local user
      file:
        path: ~/{{ item }}
        state: directory
      loop:
        - opt
        - bin
  - name: CodeReady Containers
    block:

    # 2.2. Required software packages for Linux
    # https://code-ready.github.io/crc/#required-software-packages_gsg
    - name: Install CodeReady Containers system package dependencies
      apt:
        name:
        - network-manager
        - libvirt-daemon
        - libvirt-daemon-system
        - qemu-kvm
      become: true

    - name: Install Python package dependences for Kubernetes
      pip:
        name:
        - openshift
        - pyyaml
        - jmespath
      become: true

    # 2.3. Installing CodeReady Containers
    # https://code-ready.github.io/crc/#installing-codeready-containers_gsg
    - name: Download CodeReady Containers archive
      get_url:
        url: https://mirror.openshift.com/pub/openshift-v4/clients/crc/1.14.0/{{ crc_archive }}
        dest: ./{{ crc_archive }}

    - name: Extract CodeReady Containers archive
      unarchive:
        src: ./{{ crc_archive }}
        dest: ~/opt
        creates: ~/opt/{{ crc_dir }}

    - name: Symlink CodeReady Containers binary to user's bin directory
      file:
        src: ~/opt/{{ crc_dir }}/crc
        dest: ~/bin/crc
        state: link

    - name: CodeReady Containers setup
      command: crc setup

    - name: Assign 12GiB of memory to CodeReady containers virtual machine
      command: crc config set memory 12288

    - name: Start OpenShift cluster
      command: crc start --pull-secret-file pull-secret
      
    - name: Get kubeadmin password
      shell: crc console --credentials | grep kubeadmin | sed 's/.* -p \(.*\) .*/\1/'
      register: kubeadmin_password

    - name: Get 'oc' binary path.
      command: crc oc-env
      register: oc_env

    - name: Add 'oc' binary path to .bashrc
      blockinfile:
        path: ~/.bashrc
        block: "{{ oc_env.stdout }}"

    - name: Login as kubeadmin
      shell: oc login -u kubeadmin -p {{ kubeadmin_password.stdout }}

    - name: Get kubeadmin session token
      shell: oc whoami -t
      register: oc_token

    - name: Get info from Kubernetes
      k8s_info:
        kind: ClusterVersion
        name: version
      register: k8s_output

    - name: Patch ClusterVersion to enable cluster-monitoring
      k8s:
        kind: ClusterVersion
        name: version
        definition:
          spec:  "{{ k8s_output | json_query(query) }}"
      vars:
        query: |
          resources[].{
            overrides: spec.overrides[?name!=`cluster-monitoring-operator`]
          } | [0]

    vars:
       crc_archive: crc-linux-amd64.tar.xz
       crc_dir: crc-linux-1.14.0-amd64
